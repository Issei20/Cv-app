{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/top/secure-projects/CvApp/cv-project/src/components/CvEdExpForm.js\";\nimport React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CvEdExpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeschoolName = e => {\n      this.setState({\n        edExp: {\n          schoolName: e.target.value,\n          titleStudy: this.state.edExp.titleStudy,\n          dateStudy: this.state.edExp.dateStudy,\n          id: this.state.edExp.id\n        }\n      });\n    };\n\n    this.handleChangetitleStudy = e => {\n      this.setState({\n        edExp: {\n          schoolName: this.state.edExp.schoolName,\n          titleStudy: e.target.value,\n          dateStudy: this.state.edExp.dateStudy,\n          id: this.state.edExp.id\n        }\n      });\n    };\n\n    this.handleChangedateStudy = e => {\n      this.setState({\n        edExp: {\n          schoolName: this.state.edExp.schoolName,\n          titleStudy: this.state.edExp.titleStudy,\n          dateStudy: e.target.value,\n          id: this.state.edExp.id\n        }\n      });\n    };\n\n    this.onSubmitGenInfo = e => {\n      e.preventDefault();\n      this.setState({\n        edArr: this.state.edArr.concat(this.state.edExp),\n        edExp: {\n          schoolName: \"\",\n          titleStudy: \"\",\n          dateStudy: \"\",\n          id: uniqid()\n        }\n      });\n      this.setState({\n        showForm: false,\n        infoSubmited: true\n      });\n      this.setState({\n        showBtnEd: !this.state.showBtnEd\n      });\n    };\n\n    this.showForm = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmitGenInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"schoolNameInput\",\n            children: \"School name :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangeschoolName,\n            id: \"schoolNameInput\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titleStudyInput\",\n            children: \"Title of study :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangetitleStudy,\n            id: \"titleStudyInput\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dateStudyInput\",\n            children: \"Date of study :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangedateStudy,\n            id: \"dateStudyInput\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.handleEdit = e => {\n      this.setState({\n        showEditFormEd: !this.state.showEditFormEd\n      });\n      this.setState({\n        selectedEditId: e.target.id\n      });\n    };\n\n    this.state = {\n      edArr: [],\n      edExp: {\n        schoolName: \"\",\n        titleStudy: \"\",\n        dateStudy: \"\",\n        id: uniqid()\n      },\n      infoSubmited: false,\n      showForm: false,\n      showBtnEd: true,\n      showEditFormEd: false,\n      selectedEditId: \"\"\n    };\n    this.nameRef = /*#__PURE__*/React.createRef();\n  }\n\n  handleToggle() {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n    this.setState({\n      showBtnEd: !this.state.showBtnEd\n    });\n  }\n\n  onSubmiteditInfo() {}\n\n  handleChangetitleStudyEd() {\n    let selectedExp = this.state.edArr.filter(edExp => edExp.id === this.state.selectedEditId);\n    let newTitleStudy = selectedExp[0].titleStudy;\n    this.state.edArr;\n  }\n\n  showEditFormEd() {\n    let selectedExp = this.state.edArr.filter(edExp => edExp.id === this.state.selectedEditId);\n    let newTitleStudy = selectedExp[0].titleStudy;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitEditInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"schoolNameInput\",\n          children: \"School name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangeschoolName,\n          id: \"schoolNameInput\",\n          type: \"text\",\n          value: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleStudyInput\",\n          children: \"Title of study :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangetitleStudyEd,\n          id: \"titleStudyInput\",\n          type: \"text\",\n          value: newTitleStudy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateStudyInput\",\n          children: \"Date of study :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangedateStudy,\n          id: \"dateStudyInput\",\n          type: \"text\",\n          value: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this);\n  }\n\n  showBtnEd() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.handleToggle(),\n      className: \"createEdExpBtn\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }, this);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.showBtnEd ? this.showBtnEd() : null, this.state.showForm ? this.showForm() : null, this.state.showEditFormEd ? this.showEditFormEd() : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.edArr.map(edExp => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              children: edExp.schoolName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Title of Study : \", edExp.titleStudy]\n            }, edExp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" Date of Study : \", edExp.dateStudy]\n            }, edExp.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: edExp.id,\n              onClick: this.handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CvEdExpForm;","map":{"version":3,"sources":["/home/atsal/Desktop/top/secure-projects/CvApp/cv-project/src/components/CvEdExpForm.js"],"names":["React","Component","uniqid","CvEdExpForm","constructor","props","handleChangeschoolName","e","setState","edExp","schoolName","target","value","titleStudy","state","dateStudy","id","handleChangetitleStudy","handleChangedateStudy","onSubmitGenInfo","preventDefault","edArr","concat","showForm","infoSubmited","showBtnEd","handleEdit","showEditFormEd","selectedEditId","nameRef","createRef","handleToggle","onSubmiteditInfo","handleChangetitleStudyEd","selectedExp","filter","newTitleStudy","onSubmitEditInfo","render","console","log","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\n\nclass CvEdExpForm extends Component {\n    constructor (props) {\n      super(props);\n      this.state = {  \n        edArr: [], \n        edExp: {\n        schoolName: \"\",\n        titleStudy: \"\",\n        dateStudy: \"\",\n        id: uniqid(),\n      }, \n        infoSubmited: false,\n        showForm: false,\n        showBtnEd: true,\n        showEditFormEd: false, \n        selectedEditId: \"\",\n      } \n\n      this.nameRef = React.createRef()\n\n    }\n  \n\n    handleChangeschoolName = (e) => {\n      this.setState({\n        edExp: {\n          schoolName: e.target.value,\n          titleStudy: this.state.edExp.titleStudy,\n          dateStudy: this.state.edExp.dateStudy,\n          id: this.state.edExp.id,\n          \n   \n        }\n      })\n    }\n    handleChangetitleStudy = (e) => {\n      this.setState({\n        edExp: {\n          schoolName: this.state.edExp.schoolName,\n          titleStudy: e.target.value,\n          dateStudy: this.state.edExp.dateStudy,\n          id: this.state.edExp.id,\n          \n        }\n      })\n    }\n    handleChangedateStudy = (e) => {\n      this.setState({\n        edExp: {\n          schoolName: this.state.edExp.schoolName,\n          titleStudy: this.state.edExp.titleStudy,\n          dateStudy: e.target.value,\n          id: this.state.edExp.id,\n          \n       \n        }\n      })\n    }\n  \n    onSubmitGenInfo = (e) => {\n      e.preventDefault();\n      this.setState({\n        edArr: this.state.edArr.concat(this.state.edExp),\n        edExp: {\n          schoolName: \"\",\n          titleStudy: \"\",\n          dateStudy: \"\",\n          id: uniqid(),\n        },\n      });\n      this.setState({\n        showForm: false,\n        infoSubmited: true,\n      })\n     \n  \n      this.setState({\n        showBtnEd: !this.state.showBtnEd,\n      })\n      \n    }\n\n\n\n   \n\n    showForm = () => {\n      \n      return( \n      <div>\n      <form onSubmit={this.onSubmitGenInfo}>\n       <label htmlFor=\"schoolNameInput\">School name :</label>\n       <input \n       onChange={this.handleChangeschoolName}\n       id=\"schoolNameInput\"\n       type=\"text\">\n       </input>\n       <label htmlFor=\"titleStudyInput\">Title of study :</label>\n       <input \n       onChange={this.handleChangetitleStudy}\n       id=\"titleStudyInput\"\n       type=\"text\">\n       </input>\n       <label htmlFor=\"dateStudyInput\">Date of study :</label>\n       <input \n       onChange={this.handleChangedateStudy}\n       id=\"dateStudyInput\"\n       type=\"text\">\n       </input>\n       <button\n       type=\"submit\">Submit\n       </button>\n       </form>\n       </div>\n      )\n    }\n\n    handleToggle() {\n        this.setState({showForm:!this.state.showForm});\n        this.setState({showBtnEd:!this.state.showBtnEd});\n       \n    }\n\n    onSubmiteditInfo() {\n\n    }\n\n    handleChangetitleStudyEd() {\n      let selectedExp = this.state.edArr.filter(edExp => edExp.id === this.state.selectedEditId);\n      let newTitleStudy = selectedExp[0].titleStudy;\n      this.state.edArr\n\n    }\n\n    showEditFormEd() {\n       let selectedExp = this.state.edArr.filter(edExp => edExp.id === this.state.selectedEditId );\n        let newTitleStudy = selectedExp[0].titleStudy;\n\n      return (\n        <div>\n        <form onSubmit={this.onSubmitEditInfo}>\n         <label htmlFor=\"schoolNameInput\">School name :</label>\n         <input \n         onChange={this.handleChangeschoolName}\n         id=\"schoolNameInput\"\n         type=\"text\"\n         value=\"lol\">\n         </input>\n         <label htmlFor=\"titleStudyInput\">Title of study :</label>\n         <input \n         onChange={this.handleChangetitleStudyEd}\n         id=\"titleStudyInput\"\n         type=\"text\"\n         value={newTitleStudy}>\n         </input>\n         <label htmlFor=\"dateStudyInput\">Date of study :</label>\n         <input \n         onChange={this.handleChangedateStudy}\n         id=\"dateStudyInput\"\n         type=\"text\"\n         value=\"lol\">\n         </input>\n         </form>\n         </div>\n      )\n    }\n\n    handleEdit = (e) => {\n        this.setState({showEditFormEd:!this.state.showEditFormEd})\n       this.setState({selectedEditId: e.target.id})\n        \n      \n    }\n\n    showBtnEd() {\n         return ( <button onClick={() => this.handleToggle()}className=\"createEdExpBtn\">+</button> )\n    }\n\n\n    render() {\n      console.log(this.state)\n      return (\n        <div>\n        {this.state.showBtnEd ? this.showBtnEd() : null }\n        {this.state.showForm ? this.showForm() : null }\n        {this.state.showEditFormEd ? this.showEditFormEd() : null}\n        <ul>\n      {this.state.edArr.map((edExp) => {\n        return <div> <p>{edExp.schoolName}</p>\n        <p key={edExp.id}> Title of Study : {edExp.titleStudy}</p>\n        <p key={edExp.id}> Date of Study : {edExp.dateStudy}</p>\n        <button id={edExp.id} onClick={this.handleEdit}>Edit</button>\n        </div>;\n      })}\n    </ul>\n         </div>\n        \n      );\n    }\n\n\n}\n\nexport default CvEdExpForm;"]},"metadata":{},"sourceType":"module"}