{"ast":null,"code":"var _jsxFileName = \"/home/atsal/Desktop/top/secure-projects/CvApp/cv-project/src/components/CvPractExpForm.js\";\nimport React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport CvEdExForm from \"./CvEdExpForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CvPractExpForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangecompanyName = e => {\n      this.setState({\n        pract: {\n          companyName: e.target.value,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom: this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id\n        }\n      });\n    };\n\n    this.handleChangepositionTitle = e => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: e.target.value,\n          dateWorkingFrom: this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id\n        }\n      });\n    };\n\n    this.handleChangedateWorkingFrom = e => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom: e.target.value,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id\n        }\n      });\n    };\n\n    this.handleChangedateWorkingUntil = e => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom: this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: e.target.value,\n          id: this.state.pract.id\n        }\n      });\n    };\n\n    this.onSubmitGenInfo = e => {\n      e.preventDefault();\n      this.setState({\n        practArr: this.state.practArr.concat(this.state.pract),\n        pract: {\n          companyName: \"\",\n          positionTitle: \"\",\n          dateWorkingFrom: \"\",\n          dateWorkingUntil: \"\",\n          id: uniqid()\n        }\n      });\n      this.setState({\n        showForm: false,\n        infoSubmited: true\n      });\n      this.setState({\n        showBtnPract: !this.state.showBtnPract\n      });\n    };\n\n    this.showForm = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmitGenInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"companyNameInput\",\n            children: \"Company name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangecompanyName,\n            id: \"companyNameInput\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"positionTitleInput\",\n            children: \"Position title :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangepositionTitle,\n            id: \"positionTitleInput\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"dateWorkingInput\",\n            children: \"Date working from :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangedateWorkingFrom,\n            id: \"dateWorkingInput\",\n            type: \"date\",\n            min: \"1980-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"start\",\n            children: \"To :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.handleChangedateWorkingUntil,\n            type: \"date\",\n            id: \"start\",\n            name: \"work-start\",\n            defaultValue: \"\",\n            min: \"1980-01-01\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.handleChangePositionTitleEd = e => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId);\n      let newPositionTitle = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].positionTitle = newPositionTitle;\n      this.setState({\n        practArr: newpractArr\n      });\n      console.log(newpractArr);\n    };\n\n    this.handleChangeCompanyNameEd = e => {\n      let newPractArr = this.state.practArr;\n      let selectpract = newPractArr.filter(pract => pract.id === this.state.selectedEditId);\n      let newCompanyName = e.target.value;\n      let indexSelectedEdit = newPractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newPractArr[indexSelectedEdit].companyName = newCompanyName;\n      this.setState({\n        practArr: newPractArr\n      });\n    };\n\n    this.handleChangeDateWorkingFromEd = e => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId);\n      let newDateWorkingFrom = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].dateWorkingFrom = newDateWorkingFrom;\n      this.setState({\n        practArr: newpractArr\n      });\n    };\n\n    this.handleChangeDateWorkingUntilEd = e => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId);\n      let newDateWorkingUntil = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].dateWorkingUntil = newDateWorkingUntil;\n      this.setState({\n        practArr: newpractArr\n      });\n    };\n\n    this.handleEdit = e => {\n      this.setState({\n        showEditFormEd: !this.state.showEditFormEd\n      });\n      this.setState({\n        selectedEditId: e.target.id\n      });\n    };\n\n    this.handleDivMouseOver = e => {\n      this.setState({\n        showEditButton: true,\n        showBtnPract: true\n      });\n    };\n\n    this.handleDivMouseOut = e => {\n      this.setState({\n        showEditButton: false,\n        showBtnPract: false\n      });\n    };\n\n    this.state = {\n      practArr: [],\n      pract: {\n        companyName: \"\",\n        positionTitle: \"\",\n        dateWorkingFrom: \"\",\n        dateWorkingUntil: \"\",\n        id: uniqid()\n      },\n      infoSubmited: false,\n      showForm: false,\n      showBtnPract: true,\n      showEditFormEd: false,\n      selectedEditId: \"\",\n      showEditButton: false\n    };\n  }\n\n  onSubmitEditing() {}\n\n  showEditFormEd() {\n    let selectpract = this.state.practArr.filter(pract => pract.id === this.state.selectedEditId);\n    let newPositionTitle = selectpract[0].positionTitle;\n    let newCompanyName = selectpract[0].companyName;\n    let newDateWorkingFrom = selectpract[0].dateWorkingFrom;\n    let newDateWorkingUntil = selectpract[0].dateWorkingUntil;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmitEditing,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"schoolNameInput\",\n          children: \"Company name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangeCompanyNameEd,\n          id: \"schoolNameInput\",\n          type: \"text\",\n          value: newCompanyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titleStudyInput\",\n          children: \"Position title :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangePositionTitleEd,\n          id: \"titleStudyInput\",\n          type: \"text\",\n          defaultValue: newPositionTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"dateStudyInput\",\n          children: \"Date of working :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangeDateWorkingFromEd,\n          id: \"dateStudyInput\",\n          type: \"text\",\n          value: newDateWorkingFrom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChangeDateWorkingUntilEd,\n          id: \"dateStudyInput\",\n          type: \"text\",\n          value: newDateWorkingUntil\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this);\n  }\n\n  handleToggle() {\n    this.setState({\n      showForm: !this.state.showForm\n    });\n    this.setState({\n      showBtnPract: !this.state.showBtnPract\n    });\n  }\n\n  showBtnPract() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.handleToggle(),\n      className: \"createPractExpBtn\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 19\n    }, this);\n  }\n\n  render() {\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.showBtnPract ? this.showBtnPract() : null, this.state.showForm ? this.showForm() : null, this.state.showEditFormEd ? this.showEditFormEd() : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.practArr.map(pract => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onMouseOver: () => this.handleDivMouseOver(),\n            onMouseOut: () => this.handleDivMouseOut(),\n            children: [this.state.showEditButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n              id: pract.id,\n              className: \"buttonEdit\",\n              onClick: this.handleEdit,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 39\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n              onMouseOver: () => this.handleDivMouseOver(),\n              onMouseOut: () => this.handleDivMouseOut(),\n              children: pract.companyName\n            }, uniqid(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onMouseOver: () => this.handleDivMouseOver(),\n              onMouseOut: () => this.handleDivMouseOut(),\n              children: [\" Position Title : \", pract.positionTitle]\n            }, uniqid(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onMouseOver: () => this.handleDivMouseOver(),\n              onMouseOut: () => this.handleDivMouseOut(),\n              children: [\" Working from : \", pract.dateWorkingFrom]\n            }, uniqid(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              onMouseOver: () => this.handleDivMouseOver(),\n              onMouseOut: () => this.handleDivMouseOut(),\n              children: [\" until : \", pract.dateWorkingUntil]\n            }, uniqid(), true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 16\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default CvPractExpForm;","map":{"version":3,"sources":["/home/atsal/Desktop/top/secure-projects/CvApp/cv-project/src/components/CvPractExpForm.js"],"names":["React","Component","uniqid","CvEdExForm","CvPractExpForm","constructor","props","handleChangecompanyName","e","setState","pract","companyName","target","value","positionTitle","state","dateWorkingFrom","dateWorkingUntil","id","handleChangepositionTitle","handleChangedateWorkingFrom","handleChangedateWorkingUntil","onSubmitGenInfo","preventDefault","practArr","concat","showForm","infoSubmited","showBtnPract","handleChangePositionTitleEd","newpractArr","selectpract","filter","selectedEditId","newPositionTitle","indexSelectedEdit","findIndex","console","log","handleChangeCompanyNameEd","newPractArr","newCompanyName","handleChangeDateWorkingFromEd","newDateWorkingFrom","handleChangeDateWorkingUntilEd","newDateWorkingUntil","handleEdit","showEditFormEd","handleDivMouseOver","showEditButton","handleDivMouseOut","onSubmitEditing","handleToggle","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACnCI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAsBpBC,uBAtBoB,GAsBOC,CAAD,IAAO;AAC/B,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAEH,CAAC,CAACI,MAAF,CAASC,KADjB;AAELC,UAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWL,KAAX,CAAiBI,aAF3B;AAGLE,UAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWL,KAAX,CAAiBM,eAH7B;AAILC,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWL,KAAX,CAAiBO,gBAJ9B;AAKLC,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWL,KAAX,CAAiBQ;AALhB;AADK,OAAd;AAWD,KAlCmB;;AAAA,SAmCpBC,yBAnCoB,GAmCSX,CAAD,IAAO;AACjC,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWL,KAAX,CAAiBC,WADzB;AAELG,UAAAA,aAAa,EAAEN,CAAC,CAACI,MAAF,CAASC,KAFnB;AAGLG,UAAAA,eAAe,EAAE,KAAKD,KAAL,CAAWL,KAAX,CAAiBM,eAH7B;AAILC,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWL,KAAX,CAAiBO,gBAJ9B;AAKLC,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWL,KAAX,CAAiBQ;AALhB;AADK,OAAd;AAUD,KA9CmB;;AAAA,SA+CpBE,2BA/CoB,GA+CWZ,CAAD,IAAO;AACnC,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWL,KAAX,CAAiBC,WADzB;AAELG,UAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWL,KAAX,CAAiBI,aAF3B;AAGLE,UAAAA,eAAe,EAAER,CAAC,CAACI,MAAF,CAASC,KAHrB;AAILI,UAAAA,gBAAgB,EAAE,KAAKF,KAAL,CAAWL,KAAX,CAAiBO,gBAJ9B;AAKLC,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWL,KAAX,CAAiBQ;AALhB;AADK,OAAd;AAWD,KA3DmB;;AAAA,SA4DpBG,4BA5DoB,GA4DYb,CAAD,IAAO;AACpC,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,KAAKI,KAAL,CAAWL,KAAX,CAAiBC,WADzB;AAELG,UAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWL,KAAX,CAAiBI,aAF3B;AAGLE,UAAAA,eAAe,EAAG,KAAKD,KAAL,CAAWL,KAAX,CAAiBM,eAH9B;AAILC,UAAAA,gBAAgB,EAAET,CAAC,CAACI,MAAF,CAASC,KAJtB;AAKLK,UAAAA,EAAE,EAAE,KAAKH,KAAL,CAAWL,KAAX,CAAiBQ;AALhB;AADK,OAAd;AAWD,KAxEmB;;AAAA,SA2EpBI,eA3EoB,GA2EDd,CAAD,IAAO;AACvBA,MAAAA,CAAC,CAACe,cAAF;AACA,WAAKd,QAAL,CAAc;AACZe,QAAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWS,QAAX,CAAoBC,MAApB,CAA2B,KAAKV,KAAL,CAAWL,KAAtC,CADE;AAEZA,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,EADR;AAELG,UAAAA,aAAa,EAAE,EAFV;AAGLE,UAAAA,eAAe,EAAE,EAHZ;AAILC,UAAAA,gBAAgB,EAAC,EAJZ;AAKLC,UAAAA,EAAE,EAAEhB,MAAM;AALL;AAFK,OAAd;AAUA,WAAKO,QAAL,CAAc;AACZiB,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAIA,WAAKlB,QAAL,CAAc;AACZmB,QAAAA,YAAY,EAAE,CAAC,KAAKb,KAAL,CAAWa;AADd,OAAd;AAKD,KAhGmB;;AAAA,SAkGpBF,QAlGoB,GAkGT,MAAM;AAEf,0BACA;AAAA,+BACA;AAAM,UAAA,QAAQ,EAAE,KAAKJ,eAArB;AAAA,kCACC;AAAO,YAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AACA,YAAA,QAAQ,EAAE,KAAKf,uBADf;AAEA,YAAA,EAAE,EAAC,kBAFH;AAGA,YAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,kBAFD,eAOC;AAAO,YAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPD,eAQC;AACA,YAAA,QAAQ,EAAE,KAAKY,yBADf;AAEA,YAAA,EAAE,EAAC,oBAFH;AAGA,YAAA,IAAI,EAAC;AAHL;AAAA;AAAA;AAAA;AAAA,kBARD,eAaC;AAAO,YAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbD,eAcC;AACA,YAAA,QAAQ,EAAE,KAAKC,2BADf;AAEA,YAAA,EAAE,EAAC,kBAFH;AAGA,YAAA,IAAI,EAAC,MAHL;AAIA,YAAA,GAAG,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA,kBAdD,eAoBC;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBD,eAqBC;AACA,YAAA,QAAQ,EAAE,KAAKC,4BADf;AAEA,YAAA,IAAI,EAAC,MAFL;AAEY,YAAA,EAAE,EAAC,OAFf;AAEuB,YAAA,IAAI,EAAC,YAF5B;AAGA,YAAA,YAAY,EAAC,EAHb;AAIA,YAAA,GAAG,EAAC;AAJJ;AAAA;AAAA;AAAA;AAAA,kBArBD,eA0BC;AACA,YAAA,IAAI,EAAC,QADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA;AAkCD,KAtImB;;AAAA,SAwIpBQ,2BAxIoB,GAwIWrB,CAAD,IAAO;AACnC,UAAIsB,WAAW,GAAG,KAAKf,KAAL,CAAWS,QAA7B;AACA,UAAIO,WAAW,GAAGD,WAAW,CAACE,MAAZ,CAAmBtB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAApD,CAAlB;AACA,UAAIC,gBAAgB,GAAG1B,CAAC,CAACI,MAAF,CAASC,KAAhC;AACA,UAAIsB,iBAAiB,GAAGL,WAAW,CAACM,SAAZ,CAAsB1B,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAAvD,CAAxB;AACAH,MAAAA,WAAW,CAACK,iBAAD,CAAX,CAA+BrB,aAA/B,GAA+CoB,gBAA/C;AAGA,WAAKzB,QAAL,CAAc;AACde,QAAAA,QAAQ,EAAEM;AADI,OAAd;AAGAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACD,KApJmB;;AAAA,SAuJpBS,yBAvJoB,GAuJS/B,CAAD,IAAO;AACjC,UAAIgC,WAAW,GAAG,KAAKzB,KAAL,CAAWS,QAA7B;AACA,UAAIO,WAAW,GAAGS,WAAW,CAACR,MAAZ,CAAmBtB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAApD,CAAlB;AACA,UAAIQ,cAAc,GAAGjC,CAAC,CAACI,MAAF,CAASC,KAA9B;AACA,UAAIsB,iBAAiB,GAAGK,WAAW,CAACJ,SAAZ,CAAsB1B,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAAvD,CAAxB;AACAO,MAAAA,WAAW,CAACL,iBAAD,CAAX,CAA+BxB,WAA/B,GAA6C8B,cAA7C;AAGA,WAAKhC,QAAL,CAAc;AACde,QAAAA,QAAQ,EAAEgB;AADI,OAAd;AAID,KAnKmB;;AAAA,SAsKpBE,6BAtKoB,GAsKalC,CAAD,IAAO;AACrC,UAAIsB,WAAW,GAAG,KAAKf,KAAL,CAAWS,QAA7B;AACA,UAAIO,WAAW,GAAGD,WAAW,CAACE,MAAZ,CAAmBtB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAApD,CAAlB;AACA,UAAIU,kBAAkB,GAAGnC,CAAC,CAACI,MAAF,CAASC,KAAlC;AACA,UAAIsB,iBAAiB,GAAGL,WAAW,CAACM,SAAZ,CAAsB1B,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAAvD,CAAxB;AACAH,MAAAA,WAAW,CAACK,iBAAD,CAAX,CAA+BnB,eAA/B,GAAiD2B,kBAAjD;AAGA,WAAKlC,QAAL,CAAc;AACde,QAAAA,QAAQ,EAAEM;AADI,OAAd;AAID,KAlLmB;;AAAA,SAmLpBc,8BAnLoB,GAmLcpC,CAAD,IAAO;AACtC,UAAIsB,WAAW,GAAG,KAAKf,KAAL,CAAWS,QAA7B;AACA,UAAIO,WAAW,GAAGD,WAAW,CAACE,MAAZ,CAAmBtB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAApD,CAAlB;AACA,UAAIY,mBAAmB,GAAGrC,CAAC,CAACI,MAAF,CAASC,KAAnC;AACA,UAAIsB,iBAAiB,GAAGL,WAAW,CAACM,SAAZ,CAAsB1B,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAAvD,CAAxB;AACAH,MAAAA,WAAW,CAACK,iBAAD,CAAX,CAA+BlB,gBAA/B,GAAkD4B,mBAAlD;AAGA,WAAKpC,QAAL,CAAc;AACde,QAAAA,QAAQ,EAAEM;AADI,OAAd;AAID,KA/LmB;;AAAA,SA6OpBgB,UA7OoB,GA6ONtC,CAAD,IAAO;AAChB,WAAKC,QAAL,CAAc;AAACsC,QAAAA,cAAc,EAAC,CAAC,KAAKhC,KAAL,CAAWgC;AAA5B,OAAd;AACA,WAAKtC,QAAL,CAAc;AAACwB,QAAAA,cAAc,EAAEzB,CAAC,CAACI,MAAF,CAASM;AAA1B,OAAd;AAEH,KAjPmB;;AAAA,SA8PpB8B,kBA9PoB,GA8PExC,CAAD,IAAO;AAC1B,WAAKC,QAAL,CAAc;AAACwC,QAAAA,cAAc,EAAE,IAAjB;AACdrB,QAAAA,YAAY,EAAC;AADC,OAAd;AAED,KAjQmB;;AAAA,SAmQpBsB,iBAnQoB,GAmQC1C,CAAD,IAAO;AACzB,WAAKC,QAAL,CAAc;AAACwC,QAAAA,cAAc,EAAE,KAAjB;AACdrB,QAAAA,YAAY,EAAC;AADC,OAAd;AAED,KAtQmB;;AAElB,SAAKb,KAAL,GAAa;AACXS,MAAAA,QAAQ,EAAE,EADC;AAEXd,MAAAA,KAAK,EAAE;AACPC,QAAAA,WAAW,EAAE,EADN;AAEPG,QAAAA,aAAa,EAAE,EAFR;AAGPE,QAAAA,eAAe,EAAE,EAHV;AAIPC,QAAAA,gBAAgB,EAAE,EAJX;AAKPC,QAAAA,EAAE,EAAEhB,MAAM;AALH,OAFI;AASXyB,MAAAA,YAAY,EAAE,KATH;AAUXD,MAAAA,QAAQ,EAAE,KAVC;AAWXE,MAAAA,YAAY,EAAE,IAXH;AAYXmB,MAAAA,cAAc,EAAE,KAZL;AAaXd,MAAAA,cAAc,EAAE,EAbL;AAcXgB,MAAAA,cAAc,EAAE;AAdL,KAAb;AAiBD;;AA8KDE,EAAAA,eAAe,GAAG,CAEjB;;AACDJ,EAAAA,cAAc,GAAG;AACb,QAAIhB,WAAW,GAAG,KAAKhB,KAAL,CAAWS,QAAX,CAAoBQ,MAApB,CAA2BtB,KAAK,IAAIA,KAAK,CAACQ,EAAN,KAAa,KAAKH,KAAL,CAAWkB,cAA5D,CAAlB;AACA,QAAIC,gBAAgB,GAAGH,WAAW,CAAC,CAAD,CAAX,CAAejB,aAAtC;AACA,QAAI2B,cAAc,GAAGV,WAAW,CAAC,CAAD,CAAX,CAAepB,WAApC;AACA,QAAIgC,kBAAkB,GAAGZ,WAAW,CAAC,CAAD,CAAX,CAAef,eAAxC;AACA,QAAI6B,mBAAmB,GAAGd,WAAW,CAAC,CAAD,CAAX,CAAed,gBAAzC;AACF,wBACE;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAE,KAAKkC,eAArB;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AACA,UAAA,QAAQ,EAAE,KAAKZ,yBADf;AAEA,UAAA,EAAE,EAAC,iBAFH;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEE;AAJP;AAAA;AAAA;AAAA;AAAA,gBAFD,eAQC;AAAO,UAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARD,eASC;AACA,UAAA,QAAQ,EAAE,KAAKZ,2BADf;AAEA,UAAA,EAAE,EAAC,iBAFH;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,YAAY,EAAEK;AAJd;AAAA;AAAA;AAAA;AAAA,gBATD,eAeC;AAAO,UAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfD,eAgBC;AACA,UAAA,QAAQ,EAAE,KAAKQ,6BADf;AAEA,UAAA,EAAE,EAAC,gBAFH;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAhBD,eAsBC;AACA,UAAA,QAAQ,EAAE,KAAKC,8BADf;AAEA,UAAA,EAAE,EAAC,gBAFH;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,KAAK,EAAEC;AAJP;AAAA;AAAA;AAAA;AAAA,gBAtBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAQDO,EAAAA,YAAY,GAAG;AACX,SAAK3C,QAAL,CAAc;AAACiB,MAAAA,QAAQ,EAAC,CAAC,KAAKX,KAAL,CAAWW;AAAtB,KAAd;AACA,SAAKjB,QAAL,CAAc;AAACmB,MAAAA,YAAY,EAAC,CAAC,KAAKb,KAAL,CAAWa;AAA1B,KAAd;AAEH;;AAEDA,EAAAA,YAAY,GAAG;AACV,wBAAS;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKwB,YAAL,EAAvB;AAA2C,MAAA,SAAS,EAAC,mBAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AACJ;;AAcDC,EAAAA,MAAM,GAAG;AACPhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACA,wBACE;AAAA,iBACC,KAAKA,KAAL,CAAWa,YAAX,GAA0B,KAAKA,YAAL,EAA1B,GAAgD,IADjD,EAEC,KAAKb,KAAL,CAAWW,QAAX,GAAsB,KAAKA,QAAL,EAAtB,GAAwC,IAFzC,EAGC,KAAKX,KAAL,CAAWgC,cAAX,GAA4B,KAAKA,cAAL,EAA5B,GAAoD,IAHrD,eAIA;AAAA,kBACD,KAAKhC,KAAL,CAAWS,QAAX,CAAoB8B,GAApB,CAAyB5C,KAAD,IAAW;AAClC,8BAAO;AAAK,YAAA,WAAW,EAAE,MAAK,KAAKsC,kBAAL,EAAvB;AAAkD,YAAA,UAAU,EAAE,MAAK,KAAKE,iBAAL,EAAnE;AAAA,uBACL,KAAKnC,KAAL,CAAWkC,cAAX,gBAA4B;AAAQ,cAAA,EAAE,EAAEvC,KAAK,CAACQ,EAAlB;AAAsB,cAAA,SAAS,EAAC,YAAhC;AAA6C,cAAA,OAAO,EAAE,KAAK4B,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA5B,GAAmH,IAD9G,eAEP;AAAkB,cAAA,WAAW,EAAE,MAAK,KAAKE,kBAAL,EAApC;AAA+D,cAAA,UAAU,EAAE,MAAK,KAAKE,iBAAL,EAAhF;AAAA,wBAA2GxC,KAAK,CAACC;AAAjH,eAAQT,MAAM,EAAd;AAAA;AAAA;AAAA;AAAA,oBAFO,eAGP;AAAkB,cAAA,WAAW,EAAE,MAAK,KAAK8C,kBAAL,EAApC;AAA+D,cAAA,UAAU,EAAE,MAAK,KAAKE,iBAAL,EAAhF;AAAA,+CAA6HxC,KAAK,CAACI,aAAnI;AAAA,eAAQZ,MAAM,EAAd;AAAA;AAAA;AAAA;AAAA,oBAHO,eAIP;AAAkB,cAAA,WAAW,EAAE,MAAK,KAAK8C,kBAAL,EAApC;AAA+D,cAAA,UAAU,EAAE,MAAK,KAAKE,iBAAL,EAAhF;AAAA,6CAA2HxC,KAAK,CAACM,eAAjI;AAAA,eAAQd,MAAM,EAAd;AAAA;AAAA;AAAA;AAAA,oBAJO,eAKP;AAAkB,cAAA,WAAW,EAAE,MAAK,KAAK8C,kBAAL,EAApC;AAA+D,cAAA,UAAU,EAAE,MAAK,KAAKE,iBAAL,EAAhF;AAAA,sCAAoHxC,KAAK,CAACO,gBAA1H;AAAA,eAAQf,MAAM,EAAd;AAAA;AAAA;AAAA;AAAA,oBALO;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAQD,SATA;AADC;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AAhSkC;;AAqSvC,eAAeE,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\nimport CvEdExForm from \"./CvEdExpForm\";\n\nclass CvPractExpForm extends Component {\n    constructor (props) {\n      super(props);\n      this.state = {   \n        practArr: [],\n        pract: {\n        companyName: \"\",\n        positionTitle: \"\",\n        dateWorkingFrom: \"\",\n        dateWorkingUntil: \"\",\n        id: uniqid(),\n      }, \n        infoSubmited: false,\n        showForm: false,\n        showBtnPract: true,\n        showEditFormEd: false,\n        selectedEditId: \"\",\n        showEditButton: false,\n      } ;  \n\n    }\n  \n\n    handleChangecompanyName = (e) => {\n      this.setState({\n        pract: {\n          companyName: e.target.value,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom: this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id,\n          \n   \n        }\n      })\n    }\n    handleChangepositionTitle = (e) => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: e.target.value,\n          dateWorkingFrom: this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id,\n          \n        }\n      })\n    }\n    handleChangedateWorkingFrom = (e) => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom: e.target.value,\n          dateWorkingUntil: this.state.pract.dateWorkingUntil,\n          id: this.state.pract.id,\n          \n       \n        }\n      })\n    }\n    handleChangedateWorkingUntil = (e) => {\n      this.setState({\n        pract: {\n          companyName: this.state.pract.companyName,\n          positionTitle: this.state.pract.positionTitle,\n          dateWorkingFrom:  this.state.pract.dateWorkingFrom,\n          dateWorkingUntil: e.target.value,\n          id: this.state.pract.id,\n          \n       \n        }\n      })\n    }\n   \n\n    onSubmitGenInfo = (e) => {\n      e.preventDefault();\n      this.setState({\n        practArr: this.state.practArr.concat(this.state.pract),\n        pract: {\n          companyName: \"\",\n          positionTitle: \"\",\n          dateWorkingFrom: \"\",\n          dateWorkingUntil:\"\",\n          id: uniqid(),\n        },\n      });\n      this.setState({\n        showForm: false,\n        infoSubmited: true,\n      })\n      this.setState({\n        showBtnPract: !this.state.showBtnPract,\n      })\n\n      \n    }\n\n    showForm = () => {\n      \n      return( \n      <div>\n      <form onSubmit={this.onSubmitGenInfo}>\n       <label htmlFor=\"companyNameInput\">Company name:</label>\n       <input \n       onChange={this.handleChangecompanyName}\n       id=\"companyNameInput\"\n       type=\"text\">\n       </input>\n       <label htmlFor=\"positionTitleInput\">Position title :</label>\n       <input \n       onChange={this.handleChangepositionTitle}\n       id=\"positionTitleInput\"\n       type=\"text\">\n       </input>\n       <label htmlFor=\"dateWorkingInput\">Date working from :</label>\n       <input \n       onChange={this.handleChangedateWorkingFrom}\n       id=\"dateWorkingInput\"\n       type=\"date\"\n       min=\"1980-01-01\">\n       </input>\n       <label htmlFor=\"start\">To :</label>\n       <input \n       onChange={this.handleChangedateWorkingUntil}\n       type=\"date\" id=\"start\" name=\"work-start\"\n       defaultValue=\"\"\n       min=\"1980-01-01\"></input>\n       <button\n       type=\"submit\">Submit\n       </button>\n       </form>\n       </div>\n      )\n    }\n\n    handleChangePositionTitleEd = (e) => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId );\n      let newPositionTitle = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].positionTitle = newPositionTitle; \n\n\n      this.setState({\n      practArr: newpractArr,\n      })\n      console.log(newpractArr)\n    }\n\n\n    handleChangeCompanyNameEd = (e) => {\n      let newPractArr = this.state.practArr;\n      let selectpract = newPractArr.filter(pract => pract.id === this.state.selectedEditId );\n      let newCompanyName = e.target.value;\n      let indexSelectedEdit = newPractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newPractArr[indexSelectedEdit].companyName = newCompanyName; \n\n\n      this.setState({\n      practArr: newPractArr,\n      })\n    \n    }\n\n\n    handleChangeDateWorkingFromEd = (e) => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId );\n      let newDateWorkingFrom = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].dateWorkingFrom = newDateWorkingFrom; \n\n\n      this.setState({\n      practArr: newpractArr,\n      })\n    \n    }\n    handleChangeDateWorkingUntilEd = (e) => {\n      let newpractArr = this.state.practArr;\n      let selectpract = newpractArr.filter(pract => pract.id === this.state.selectedEditId );\n      let newDateWorkingUntil = e.target.value;\n      let indexSelectedEdit = newpractArr.findIndex(pract => pract.id === this.state.selectedEditId);\n      newpractArr[indexSelectedEdit].dateWorkingUntil = newDateWorkingUntil; \n\n\n      this.setState({\n      practArr: newpractArr,\n      })\n    \n    }\n\n    onSubmitEditing() {\n\n    }\n    showEditFormEd() {\n        let selectpract = this.state.practArr.filter(pract => pract.id === this.state.selectedEditId );\n        let newPositionTitle = selectpract[0].positionTitle;\n        let newCompanyName = selectpract[0].companyName;\n        let newDateWorkingFrom = selectpract[0].dateWorkingFrom;\n        let newDateWorkingUntil = selectpract[0].dateWorkingUntil;\n      return (\n        <div>\n        <form onSubmit={this.onSubmitEditing}>\n         <label htmlFor=\"schoolNameInput\">Company name :</label>\n         <input \n         onChange={this.handleChangeCompanyNameEd}\n         id=\"schoolNameInput\"\n         type=\"text\"\n         value={newCompanyName}>\n         </input>\n         <label htmlFor=\"titleStudyInput\">Position title :</label>\n         <input \n         onChange={this.handleChangePositionTitleEd}\n         id=\"titleStudyInput\"\n         type=\"text\"\n         defaultValue={newPositionTitle}>\n         </input>\n         <label htmlFor=\"dateStudyInput\">Date of working :</label>\n         <input \n         onChange={this.handleChangeDateWorkingFromEd}\n         id=\"dateStudyInput\"\n         type=\"text\"\n         value={newDateWorkingFrom}>\n         </input>\n         <input \n         onChange={this.handleChangeDateWorkingUntilEd}\n         id=\"dateStudyInput\"\n         type=\"text\"\n         value={newDateWorkingUntil}>\n         </input>\n         </form>\n         </div>\n      )\n    }\n\n    handleEdit = (e) => {\n        this.setState({showEditFormEd:!this.state.showEditFormEd})\n        this.setState({selectedEditId: e.target.id})\n        \n    }\n\n    handleToggle() {\n        this.setState({showForm:!this.state.showForm});\n        this.setState({showBtnPract:!this.state.showBtnPract});\n       \n    }\n\n    showBtnPract() {\n         return ( <button onClick={() => this.handleToggle()}className=\"createPractExpBtn\">+</button> )\n    }\n  \n\n    handleDivMouseOver = (e) => {\n      this.setState({showEditButton: true,\n      showBtnPract:true,})\n    }\n\n    handleDivMouseOut = (e) => {\n      this.setState({showEditButton: false,\n      showBtnPract:false,})\n    }\n\n\n    render() {\n      console.log(this.state)\n      return (\n        <div>\n        {this.state.showBtnPract ? this.showBtnPract() : null }\n        {this.state.showForm ? this.showForm() : null }\n        {this.state.showEditFormEd ? this.showEditFormEd() : null}\n        <ul>\n      {this.state.practArr.map((pract) => {\n        return <div onMouseOver={() =>this.handleDivMouseOver()} onMouseOut={()=> this.handleDivMouseOut()}> \n         {this.state.showEditButton ? <button id={pract.id} className=\"buttonEdit\" onClick={this.handleEdit}>Edit</button> : null}\n        <p key={uniqid()} onMouseOver={() =>this.handleDivMouseOver()} onMouseOut={()=> this.handleDivMouseOut()}>{pract.companyName}</p>\n        <p key={uniqid()} onMouseOver={() =>this.handleDivMouseOver()} onMouseOut={()=> this.handleDivMouseOut()}> Position Title : {pract.positionTitle}</p>\n        <p key={uniqid()} onMouseOver={() =>this.handleDivMouseOver()} onMouseOut={()=> this.handleDivMouseOut()}> Working from : {pract.dateWorkingFrom}</p>\n        <p key={uniqid()} onMouseOver={() =>this.handleDivMouseOver()} onMouseOut={()=> this.handleDivMouseOut()}> until : {pract.dateWorkingUntil}</p>\n       \n        </div>;\n      })}\n    </ul>\n         </div>\n        \n      );\n    }\n\n\n}\n\nexport default CvPractExpForm;"]},"metadata":{},"sourceType":"module"}